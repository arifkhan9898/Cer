<!DOCTYPE HTML>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <title>SlickGrid</title>
    <link href="~/Content/slick.grid.css" rel="stylesheet" />
    <link rel="stylesheet" href="examples.css" type="text/css" />
    <link href="~/Content/themes/base/theme.css" rel="stylesheet" />
    <style>
        .cell-story {
            white-space: normal !important;
            line-height: 19px !important;
        }

        .loading-indicator {
            display: inline-block;
            padding: 12px;
            background: white;
            -opacity: 0.5;
            color: black;
            font-weight: bold;
            z-index: 9999;
            border: 1px solid red;
            -moz-border-radius: 10px;
            -webkit-border-radius: 10px;
            -moz-box-shadow: 0 0 5px red;
            -webkit-box-shadow: 0px 0px 5px red;
            -text-shadow: 1px 1px 1px white;
        }

        .loading-indicator label {
            padding-left: 20px;
            background: url('../images/ajax-loader-small.gif') no-repeat center left;
        }
    </style>
    <script src="/Scripts/jquery-1.10.2.min.js"></script>
    <script src="/Scripts/jquery-ui-1.11.4.min.js"></script>
    <script src="/Scripts/jquery.event.drag.js"></script>
    <script src="/Scripts/SlickGrid/slick.core.js"></script>
    <script src="/Scripts/SlickGrid/slick.grid.js"></script>
    <script src="/Scripts/SlickGrid/Controls/slick.pager.js"></script>
    <script src="/Scripts/SlickGrid/slick.groupitemmetadataprovider.js?v=RUFU1x9TDSkyvChFWteLsA2" type="text/javascript"></script>
    <script src="/Scripts/SlickGrid/Plugins/slick.autotooltips.js?v=-AIKLINWiZmkA-CnhA5ZRQ2" type="text/javascript"></script>
    <script src="/Scripts/SlickGrid/Plugins/slick.headerbuttons.js?v=9YOWFAIrd9_PYSbDwFxdqg2" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.2/moment.min.js"></script>
<script>
    (function($) {
        function RemoteProxyModel() {
            // private
            var PAGESIZE = 50;
            var data = { length: 0 };
            var searchstr = "";
            var sortcol = null;
            var sortdir = 1;
            var h_request = null;
            var req = null; // ajax request

            // events
            var onDataLoading = new Slick.Event();
            var onDataLoaded = new Slick.Event();

            function init() {}

            function isDataLoaded(from, to) {
                for (var i = from; i <= to; i++) {
                    if (data[i] == undefined || data[i] == null) {
                        return false;
                    }
                }

                return true;
            }

            function clear() {
                for (var key in data) {
                    delete data[key];
                }
                data.length = 0;
            }

            function ensureData(from, to) {
                if (req) {
                    req.abort();
                    for (var i = req.fromPage; i <= req.toPage; i++)
                        data[i * PAGESIZE] = undefined;
                }

                if (from < 0) {
                    from = 0;
                }

                if (data.length > 0) {
                    to = Math.min(to, data.length - 1);
                }

                var fromPage = Math.floor(from / PAGESIZE);
                var toPage = Math.floor(to / PAGESIZE);

                while (data[fromPage * PAGESIZE] !== undefined && fromPage < toPage)
                    fromPage++;

                while (data[toPage * PAGESIZE] !== undefined && fromPage < toPage)
                    toPage--;

                if (fromPage > toPage || ((fromPage === toPage) && data[fromPage * PAGESIZE] !== undefined)) {
                    // TODO:  look-ahead
                    onDataLoaded.notify({ from: from, to: to });
                    return;
                }

                var url = "http://localhost:6040/api/Equipment?";
                url += "skip=" + (fromPage * PAGESIZE);
                url += "&limit=" + (((toPage - fromPage) * PAGESIZE) + PAGESIZE);

                if (sortcol != null) {
                    url += ("&sortby=" + sortcol + ((sortdir > 0) ? "+asc" : "+desc"));
                }

                if (h_request != null) {
                    clearTimeout(h_request);
                }

                h_request = setTimeout(function() {
                        for (var i = fromPage; i <= toPage; i++)
                            data[i * PAGESIZE] = null; // null indicates a 'requested but not available yet'

                        onDataLoading.notify({ from: from, to: to });

                        req = $.ajax({
                            url: url,
                            jsonp: "callback",
                            dataType: "jsonp",
                            success: onSuccess,
                            error: function() {
                                onError(fromPage, toPage);
                            }
                        });

                        req.fromPage = fromPage;
                        req.toPage = toPage;
                    },
                    50);
            }

            function onError(fromPage, toPage) {
                alert("error loading pages " + fromPage + " to " + toPage);
            }

            function onSuccess(resp) {

                var from = resp.ViewInfo.Skip, to = from + resp.ViewInfo.Take;
                data.length = Math.min(parseInt(resp.ViewInfo.Total), resp.ViewInfo.Take); // limitation of the API

                for (var i = 0; i < resp.Equipment.length; i++) {
                    var item = resp.Equipment[i];

                    // Old IE versions can't parse ISO dates, so change to universally-supported format.
                    //item.create_ts = item.create_ts.replace(/^(\d+)-(\d+)-(\d+)T(\d+:\d+:\d+)Z$/, "$2/$3/$1 $4 UTC");
                    //item.create_ts = new Date(item.create_ts);

                    data[from + i] = item;
                    data[from + i].index = item.Id;
                }

                req = null;

                onDataLoaded.notify({ from: from, to: to });
            }


            function reloadData(from, to) {
                for (var i = from; i <= to; i++)
                    delete data[i];

                ensureData(from, to);
            }


            function setSort(column, dir) {
                sortcol = column;
                sortdir = dir;
                clear();
            }

            function setSearch(str) {
                searchstr = str;
                clear();
            }

            init();

            return {
                // properties
                "data": data,

                // methods
                "clear": clear,
                "isDataLoaded": isDataLoaded,
                "ensureData": ensureData,
                "reloadData": reloadData,
                "setSort": setSort,
                "setSearch": setSearch,

                // events
                "onDataLoading": onDataLoading,
                "onDataLoaded": onDataLoaded
            };
        }

        // Slick.Data.RemoteModel
        $.extend(true, window, { Slick: { Data: { RemoteModel: RemoteProxyModel } } });
    })(jQuery);

    var grid;
    var loader = new Slick.Data.RemoteModel();

    var storyTitleFormatter = function(row, cell, value, columnDef, dataContext) {
        s = "<b><a href='" +
            dataContext["url"] +
            "' target=_blank>" +
            dataContext["title"] +
            "</a></b><br/>";
        desc = dataContext["text"];
        if (desc) { // on Hackernews many stories don't have a description
            s += desc;
        }
        return s;
    };

    var dateFormatter = function(row, cell, value, columnDef, dataContext) {
        return (value.getMonth() + 1) + "/" + value.getDate() + "/" + value.getFullYear();
    };


    var columns = [
        {
            id: "num",
            name: "#",
            field: "index",
            behavior: "select",
            cssClass: "cell-selection",
            width: 40,
            cannotTriggerInsert: true,
            resizable: false,
            selectable: false
        },
        { id: "Name", name: "Name", field: "Name", width: 520, sortable: true },
        { id: "Type", name: "Type", field: "Type", width: 60, sortable: true }
    ];

    var options = {
        editable: true,
        enableAddRow: true,
        enableCellNavigation: true,
        asyncEditorLoading: true,
        forceFitColumns: false,
        topPanelHeight: 25
    };

    var loadingIndicator = null;


    $(function() {
        grid = new Slick.Grid("#myGrid", loader.data, columns, options);

        grid.onViewportChanged.subscribe(function(e, args) {
            var vp = grid.getViewport();
            loader.ensureData(vp.top, vp.bottom);
        });

        grid.onSort.subscribe(function(e, args) {
            loader.setSort(args.sortCol.field, args.sortAsc ? 1 : -1);
            var vp = grid.getViewport();
            loader.ensureData(vp.top, vp.bottom);
        });

        loader.onDataLoading.subscribe(function() {
            if (!loadingIndicator) {
                loadingIndicator = $("<span class='loading-indicator'><label>Buffering...</label></span>")
                    .appendTo(document.body);
                var $g = $("#myGrid");

                loadingIndicator
                    .css("position", "absolute")
                    .css("top", $g.position().top + $g.height() / 2 - loadingIndicator.height() / 2)
                    .css("left", $g.position().left + $g.width() / 2 - loadingIndicator.width() / 2);
            }

            loadingIndicator.show();
        });

        loader.onDataLoaded.subscribe(function(e, args) {
            for (var i = args.from; i <= args.to; i++) {
                grid.invalidateRow(i);
            }

            grid.updateRowCount();
            grid.render();

            loadingIndicator.fadeOut();
        });

        $("#txtSearch")
            .keyup(function(e) {
                if (e.which === 13) {
                    loader.setSearch($(this).val());
                    var vp = grid.getViewport();
                    loader.ensureData(vp.top, vp.bottom);
                }
            });

        loader.setSearch($("#txtSearch").val());
        loader.setSort("create_ts", -1);
        var pager = new Slick.Controls.Pager(loader, grid, $("#pager"));
        grid.setSortColumn("date", false);

        // load the first page
        grid.onViewportChanged.notify();
    });
</script>
    <style>
        .cell-story {
            white-space: normal !important;
            line-height: 19px !important;
        }

        .loading-indicator {
            display: inline-block;
            padding: 12px;
            background: white;
            -opacity: 0.5;
            color: black;
            font-weight: bold;
            z-index: 9999;
            border: 1px solid red;
            -moz-border-radius: 10px;
            -webkit-border-radius: 10px;
            -moz-box-shadow: 0 0 5px red;
            -webkit-box-shadow: 0px 0px 5px red;
            -text-shadow: 1px 1px 1px white;
        }

            .loading-indicator label {
                padding-left: 20px;
                background: url('../images/ajax-loader-small.gif') no-repeat center left;
            }
    </style>
</head>
<body>
    <div style="width:600px;">
        <div class="grid-header" style="width:100%">
            <label>SlickGrid</label>
            <span style="float:right" class="ui-icon ui-icon-search" title="Toggle search panel"
                  onclick="toggleFilterRow()"></span>
        </div>
        <div id="myGrid" style="width:100%;height:500px;"></div>
        <div id="pager" style="width:100%;height:20px;"></div>
    </div>
</body>
</html>
